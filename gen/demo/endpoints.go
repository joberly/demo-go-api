// Code generated by goa v3.10.1, DO NOT EDIT.
//
// demo endpoints
//
// Command:
// $ goa gen github.com/joberly/demo-go-api/design

package demo

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "demo" service endpoints.
type Endpoints struct {
	Rand goa.Endpoint
}

// NewEndpoints wraps the methods of the "demo" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Rand: NewRandEndpoint(s),
	}
}

// Use applies the given middleware to all the "demo" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Rand = m(e.Rand)
}

// NewRandEndpoint returns an endpoint function that calls the method "rand" of
// service "demo".
func NewRandEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RandPayload)
		res, err := s.Rand(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedRandResult(res, "default")
		return vres, nil
	}
}
